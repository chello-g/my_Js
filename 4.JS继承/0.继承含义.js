// 继承的方法和属性无外乎两类，
// 一类在构造函数中，这类属性和方法在对象实例化时被复制一遍。
// 另一类在类的原型中，这类属性和方法在对象实例化时被所有实例化对象所共用。


// 提到类的实例化我们就引出了继承，当然如果实例化的是对象那么则为对象继承，
// 如果实例化的是类（当然类也是一种对象，只不过是用来创建对象的），那么就是一种类的继承。


// 对于类的继承我们根据继承的方式又分为很多种，
// 通过原型链继承的方式我们称之为类式继承，
// 通过构造函数继承的方式我们称之为构造函数式继承，
// 那么将这两种方式组合起来的继承方式，我们称之为组合继承。


// 由于类式继承过程中会实例化父类，这样如果父类构造函数极其复杂，
// 那么这种方式对构造函数的开销是不值得的，
// 此时有了一种新的继承方式，
// 通过在一个函数内的过渡对象实现继承并返回新对象的方式我们称之为寄生式继承，
// 此时我们再结合构造函数式继承，得到的继承方式我们称之为寄生组合式继承。


// 有时候子类对父类实现继承可以通过拷贝方法和属性的方式来实现，
// 这就有了多继承，即将多个父类（对象）的属性和方法拷贝给子类实现继承。